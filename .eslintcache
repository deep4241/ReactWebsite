[{"F:\\assignment\\src\\index.js":"1","F:\\assignment\\src\\modules\\homepage\\HomePage.js":"2","F:\\assignment\\src\\modules\\common\\component\\Search.js":"3","F:\\assignment\\src\\modules\\common\\component\\Sort.js":"4","F:\\assignment\\src\\App.js":"5","F:\\assignment\\src\\modules\\common\\component\\Header.js":"6","F:\\assignment\\src\\modules\\common\\component\\ShoppingList.js":"7","F:\\assignment\\src\\modules\\common\\component\\CartIcon.js":"8","F:\\assignment\\src\\modules\\cartpage\\CartPage.js":"9"},{"size":523,"mtime":1610185120000,"results":"10","hashOfConfig":"11"},{"size":471,"mtime":1610333749928,"results":"12","hashOfConfig":"11"},{"size":837,"mtime":1610185122000,"results":"13","hashOfConfig":"11"},{"size":809,"mtime":1610185122000,"results":"14","hashOfConfig":"11"},{"size":3203,"mtime":1610334171210,"results":"15","hashOfConfig":"11"},{"size":980,"mtime":1610287997834,"results":"16","hashOfConfig":"11"},{"size":1407,"mtime":1610208492000,"results":"17","hashOfConfig":"11"},{"size":462,"mtime":1610185122000,"results":"18","hashOfConfig":"11"},{"size":2297,"mtime":1610333756972,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"6gqx1a",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"22"},"F:\\assignment\\src\\index.js",[],["46","47"],"F:\\assignment\\src\\modules\\homepage\\HomePage.js",[],["48","49"],"F:\\assignment\\src\\modules\\common\\component\\Search.js",["50"],"import React , { useState }  from 'react';\nimport { Input } from 'antd';\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst effects = {\n  transition:'7s'\n};\n\nfunction Search(props) {\n  const [open, setOpen] = useState(false);\n  const inputEvent = props.inputEvent;\n  const prod = props.prod;\n  return (  \n    <div className='search'>\n      {open ? <Input \n            input=\"text\"\n            style={{ ...effects, marginRight:'40px', }} \n            placeholder=\"Search Product\" \n            Value={prod}\n            onChange={( event ) => inputEvent (event)}\n            /> : null}\n     \n       <a style={{transition:'1s'}} onClick={() => {  setOpen(!open); }}><FontAwesomeIcon icon={faSearch} /></a>  \n      \n    </div>\n  );\n}\n\nexport default Search;\n",["51","52"],"F:\\assignment\\src\\modules\\common\\component\\Sort.js",["53","54","55","56","57"],"import React from 'react';\nimport {Breadcrumb} from 'antd';\n\n\n\nfunction Sort( props ) {\n  \n  const sort = props.sort;\n  return (  \n    <Breadcrumb className='breadcrum'>\n    <Breadcrumb.Item className='breadcrumheading'>Sort By</Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <a href=\"#\" style={{fontWeight:'600'}} onClick={() => sort('pricehigh')}>Price--High </a>\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <a href=\"#\" style={{fontWeight:'600'}} onClick={() => sort('pricelow')}>Price--Low High</a>\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <a href=\"#\" style={{fontWeight:'600'}} onClick={() => sort('discounthigh')}>Discount</a>\n    </Breadcrumb.Item>\n    <Breadcrumb.Item>\n      <a href=\"\" style={{fontWeight:'600'}}></a>\n    </Breadcrumb.Item>\n  </Breadcrumb>\n\n  );\n}\nexport default Sort;\n","F:\\assignment\\src\\App.js",["58"],"\nimport { Layout } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport CartPage from './modules/cartpage/CartPage';\nimport HomePage from './modules/homepage/HomePage';\nimport { Route, Switch } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nimport './assets/css/style.css';\nimport CustHeader from './modules/common/component/Header';\nconst { Content, Footer } = Layout;\n\nfunction App(props) {\n  const [cart, setCart] = useState([]);\n  const [items, setPosts] = useState([]);\n  const [count, setCount] = useState(0);\n  const [prod, setProd] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const addToCart = (items) => {\n    setCart([...cart, { ...items, qty: 1 }]);\n    //console.log(cart);  \n  };\n  const addQty = (product) => {\n    const data = cart;\n    data.forEach(item => {\n      if (item.name === product) {\n        item.qty++;\n      }\n    })\n    console.log(data);\n    setCart(data);\n    let cnt = count;\n    cnt++;\n    setCount(cnt);\n  };\n  const removeQty = (product) => {\n    const data = cart;\n    let cnt = count;\n    data.forEach(item => {\n      if (item.name === product && item.qty > 1) {\n        item.qty--;\n        cnt++;\n      }\n    })\n    setCart(data);\n    setCount(cnt);\n  };\n  const removeCart = (productRemove) => {\n    setCart(\n      cart.filter((item) => item.name !== productRemove.name)\n    );\n\n  };\n\n  const inputEvent = (event) => {\n    const prod = event.target.value;\n    cart.filter((item) => item.cart !== event.cart)\n    //console.log(prod);\n    setProd(prod);\n    /*setPosts(\n      items.filter((item) => item.name.indexOf(prod) >= 0)\n    );*/\n  };\n  //low and high priority with discount filter \n  const sort = (mode = 'pricehigh') => {\n    items.sort((a, b) => {\n      if (mode === 'pricehigh') {\n        return b.price.actual - a.price.actual;\n      } else if (mode === 'pricelow') {\n        return a.price.actual - b.price.actual;\n      } else if (mode === 'discounthigh') {\n        return b.discount - a.discount;\n      }\n    });\n    setPosts(items);\n    return;\n  }\n\n   //use api with useEffect\n  useEffect((props) => {\n    axios.get('https://my-json-server.typicode.com/prograk/demo/items')\n      .then(res => {\n        \n        setPosts(res.data || [])\n        setLoading(true);\n      })\n\n      .catch(err => {\n        console.log(err)\n\n      })\n  }, [])\n\n\n  //filter the items based on searh\n  let data = prod && prod.length > 0 ? items.filter((item) => item.name.toLowerCase().indexOf(prod.toLowerCase()) >= 0) : items;\n\n  return (\n\n    <Layout className=\"layout\">\n\n      <CustHeader cart  ={cart} inputEvent  ={inputEvent}/>\n      <Content style={{ padding: '0 20px', marginBottom: '50px' }}>\n        {loading ? null : <Spin />}\n        <Switch>\n          \n          <Route exact path='/' component={() => <HomePage addToCart={addToCart} items={data} sort={sort} />} />\n          <Route path='/cartpage' component={() => <CartPage items={cart} removeCart={removeCart} addQty={addQty} removeQty={removeQty} />} />\n        </Switch>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}> Â© copyright</Footer>\n    </Layout>\n  );\n}\nexport default App;","F:\\assignment\\src\\modules\\common\\component\\Header.js",[],"F:\\assignment\\src\\modules\\common\\component\\ShoppingList.js",["59","60"],"\nimport React from 'react';\nimport {Button, Card, Col, Row } from 'antd';\nimport {faRupeeSign} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport CartIcon from './CartIcon';\n\nconst {  } = Card;\nconst colStyles = {\n  flexBasis: \"20%\",\n  width: \"20%\"\n};\nconst divStyles = {\n  padding: \".2em\",\n\n};\nfunction ShoppLingList(props) {\n  const addToCart = props.addToCart;\n \n  return (\n    <div className=\"site-card-wrapper\">\n       \n\n      <Row type=\"flex\" gutter={8}>\n\n      {props.items.map((post,i) =>(\n          <Col  style={{ ...colStyles }} key ={i}>\n            <div style={{ ...divStyles }}>\n          <Card key={post.id}\n            className='productCard'\n            hoverable\n            cover={<img alt=\"example\" src={post.image} />} >\n            <h2>{post.name}</h2>\n            <div className='price-box'>\n              <p className='price'><FontAwesomeIcon icon={faRupeeSign}/>{post.price.actual} </p>\n              <p className='priceold'> {post.price.display}  </p>\n              <p className=\"productOffer\">{post.discount} % off</p>\n            </div>\n            <span className='action'>\n              <Button type=\"primary\"  onClick={() => addToCart(post)}>Add to Cart</Button>\n            </span>\n          </Card>\n          </div>\n          </Col>\n            ))}\n      </Row>\n\n    </div>\n  );\n}\nexport default ShoppLingList;","F:\\assignment\\src\\modules\\common\\component\\CartIcon.js",[],"F:\\assignment\\src\\modules\\cartpage\\CartPage.js",["61","62","63"],"\nimport { Col, Row, Button, Layout  } from 'antd';\nimport React from 'react';\nimport { faPlus, faMinus, faRupeeSign } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst { Content, Sider } = Layout;\nfunction CartPage(props) {\n  const items = props.items;\n  const removeCart = props.removeCart;\n  \n  let total=0;\n  let qty=0\n  console.log(props,\"props\");  \n  props.items.map((post,i) =>\n  {\n    total=total+ (post.price.actual*post.qty);\n    qty=qty+post.qty;\n  })\n\n  return (\n\n    <div className=\"site-layout-content\" style={{ marginTop: '10px' }}>\n      \n    <Layout className=\"layout\">\n    <Content>      <Row type=\"flex\" gutter={8}>\n      {props.items.map((post,i) =>(\n        <Col xs={24} xl={23} key ={i}>\n          <Row type=\"flex\" className='cartcard'>\n            <Col xs={6} xl={2}><img alt='' src={post.image} width={50} /></Col>\n            <Col xs={18} xl={10} className='cartcarddesc'>\n            <h2>{post.name}</h2>\n              <p className='price'><FontAwesomeIcon icon={faRupeeSign}/>{post.price.actual} </p>\n            </Col>\n            <Col xs={12} xl={6} className='cartcardplusminus'>\n              <div><Button type=\"primary\" shape=\"circle\" onClick={()=>props.addQty(post.name)}><FontAwesomeIcon icon={faPlus} /> </Button> </div>\n              <div>{post.qty} </div>\n              <div><Button type=\"primary\" shape=\"circle\" onClick={()=>props.removeQty(post.name)}><FontAwesomeIcon icon={faMinus} /> </Button> </div>\n            </Col>\n            <Col xs={12} xl={6} className='cartcardremove'><a onClick={() => removeCart(post)}>Remove</a></Col>\n          </Row>\n        </Col>\n           \n  ))}\n </Row></Content>\n    <Sider><Row type=\"flex\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Col xs={24} xl={24}>\n              <div className='cartSidebar'>\n                <h2>Price Details</h2>\n                <ul>\n                  <li>Price ({qty} item): </li>\n                  <li>{total}</li>\n                </ul>\n                <ul className='sidebarBg'>\n                  <li>Total Payable :</li>\n                  <li>{total}</li>\n                </ul>\n              </div>\n            </Col>\n          </Row></Sider>\n  </Layout>\n\n\n    </div>\n  );\n}\nexport default CartPage;",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":24,"column":8,"nodeType":"72","endLine":24,"endColumn":74},{"ruleId":"64","replacedBy":"73"},{"ruleId":"66","replacedBy":"74"},{"ruleId":"70","severity":1,"message":"75","line":13,"column":7,"nodeType":"72","endLine":13,"endColumn":80},{"ruleId":"70","severity":1,"message":"75","line":16,"column":7,"nodeType":"72","endLine":16,"endColumn":79},{"ruleId":"70","severity":1,"message":"75","line":19,"column":7,"nodeType":"72","endLine":19,"endColumn":83},{"ruleId":"76","severity":1,"message":"77","line":22,"column":7,"nodeType":"72","endLine":22,"endColumn":45},{"ruleId":"70","severity":1,"message":"75","line":22,"column":7,"nodeType":"72","endLine":22,"endColumn":45},{"ruleId":"78","severity":1,"message":"79","line":68,"column":23,"nodeType":"80","messageId":"81","endLine":68,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":9,"column":7,"nodeType":"88","messageId":"89","endLine":9,"endColumn":11},{"ruleId":"82","severity":1,"message":"90","line":8,"column":9,"nodeType":"84","messageId":"85","endLine":8,"endColumn":14},{"ruleId":"78","severity":1,"message":"91","line":14,"column":28,"nodeType":"80","messageId":"92","endLine":14,"endColumn":30},{"ruleId":"70","severity":1,"message":"71","line":39,"column":60,"nodeType":"72","endLine":39,"endColumn":96},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],["93"],["94"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["93"],["94"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'CartIcon' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'items' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]